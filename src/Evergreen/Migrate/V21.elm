module Evergreen.Migrate.V21 exposing (..)

{-| This migration file was automatically generated by the lamdera compiler.

It includes:

  - A migration for each of the 6 Lamdera core types that has changed
  - A function named `migrate_ModuleName_TypeName` for each changed/custom type

Expect to see:

  - `Unimplement–µd` values as placeholders wherever I was unable to figure out a clear migration path for you
  - `@NOTICE` comments for things you should know about, i.e. new custom type constructors that won't get any
    value mappings from the old type by default

You can edit this file however you wish! It won't be generated again.

See <https://dashboard.lamdera.app/docs/evergreen> for more info.

-}

import Array
import Dict
import Evergreen.V20.Auth
import Evergreen.V20.Bridge
import Evergreen.V20.Components.Toast
import Evergreen.V20.Event
import Evergreen.V20.ItemPriority
import Evergreen.V20.Layouts.Scaffold
import Evergreen.V20.Main
import Evergreen.V20.Main.Layouts.Model
import Evergreen.V20.Main.Pages.Model
import Evergreen.V20.Pages.Account
import Evergreen.V20.Pages.Admin.Manual
import Evergreen.V20.Pages.Admin.Menu
import Evergreen.V20.Pages.Admin.Users
import Evergreen.V20.Pages.Credits
import Evergreen.V20.Pages.Home_
import Evergreen.V20.Pages.List.ImportShared
import Evergreen.V20.Pages.Lists
import Evergreen.V20.Pages.Lists.Create
import Evergreen.V20.Pages.Lists.Edit.ListId_
import Evergreen.V20.Pages.Lists.Id_.CreateItem
import Evergreen.V20.Pages.Lists.ListId_
import Evergreen.V20.Pages.Lists.ListId_.Edit.ItemId_
import Evergreen.V20.Pages.NotFound_
import Evergreen.V20.Pages.Settings
import Evergreen.V20.Pages.Setup
import Evergreen.V20.Pages.Setup.Connect
import Evergreen.V20.Pages.Setup.NewAccount
import Evergreen.V20.Pages.SetupKnown
import Evergreen.V20.Pages.Share.ListId_
import Evergreen.V20.Role
import Evergreen.V20.Shared
import Evergreen.V20.Shared.Model
import Evergreen.V20.SortedEventList
import Evergreen.V20.Sync
import Evergreen.V20.Types
import Evergreen.V20.UserManagement
import Evergreen.V21.Auth
import Evergreen.V21.Bridge
import Evergreen.V21.Components.Toast
import Evergreen.V21.Event
import Evergreen.V21.ItemPriority
import Evergreen.V21.Layouts.Scaffold
import Evergreen.V21.Main
import Evergreen.V21.Main.Layouts.Model
import Evergreen.V21.Main.Pages.Model
import Evergreen.V21.NetworkStatus
import Evergreen.V21.Pages.Account
import Evergreen.V21.Pages.Admin.Manual
import Evergreen.V21.Pages.Admin.Menu
import Evergreen.V21.Pages.Admin.Users
import Evergreen.V21.Pages.Credits
import Evergreen.V21.Pages.Home_
import Evergreen.V21.Pages.List.ImportShared
import Evergreen.V21.Pages.Lists
import Evergreen.V21.Pages.Lists.Create
import Evergreen.V21.Pages.Lists.Edit.ListId_
import Evergreen.V21.Pages.Lists.Id_.CreateItem
import Evergreen.V21.Pages.Lists.ListId_
import Evergreen.V21.Pages.Lists.ListId_.Edit.ItemId_
import Evergreen.V21.Pages.NotFound_
import Evergreen.V21.Pages.Settings
import Evergreen.V21.Pages.Setup
import Evergreen.V21.Pages.Setup.Connect
import Evergreen.V21.Pages.Setup.NewAccount
import Evergreen.V21.Pages.SetupKnown
import Evergreen.V21.Pages.Share.ListId_
import Evergreen.V21.Role
import Evergreen.V21.Shared
import Evergreen.V21.Shared.Model
import Evergreen.V21.SortedEventList
import Evergreen.V21.Sync
import Evergreen.V21.Types
import Evergreen.V21.UserManagement
import Lamdera.Migrations exposing (..)
import List
import Maybe


frontendModel : Evergreen.V20.Types.FrontendModel -> ModelMigration Evergreen.V21.Types.FrontendModel Evergreen.V21.Types.FrontendMsg
frontendModel old =
    ModelMigrated ( migrate_Types_FrontendModel old, Cmd.none )


backendModel : Evergreen.V20.Types.BackendModel -> ModelMigration Evergreen.V21.Types.BackendModel Evergreen.V21.Types.BackendMsg
backendModel old =
    ModelUnchanged


frontendMsg : Evergreen.V20.Types.FrontendMsg -> MsgMigration Evergreen.V21.Types.FrontendMsg Evergreen.V21.Types.FrontendMsg
frontendMsg old =
    MsgUnchanged


toBackend : Evergreen.V20.Types.ToBackend -> MsgMigration Evergreen.V21.Types.ToBackend Evergreen.V21.Types.BackendMsg
toBackend old =
    MsgUnchanged


backendMsg : Evergreen.V20.Types.BackendMsg -> MsgMigration Evergreen.V21.Types.BackendMsg Evergreen.V21.Types.BackendMsg
backendMsg old =
    MsgUnchanged


toFrontend : Evergreen.V20.Types.ToFrontend -> MsgMigration Evergreen.V21.Types.ToFrontend Evergreen.V21.Types.FrontendMsg
toFrontend old =
    MsgUnchanged


migrate_Types_FrontendModel : Evergreen.V20.Types.FrontendModel -> Evergreen.V21.Types.FrontendModel
migrate_Types_FrontendModel old =
    old |> migrate_Main_Model


migrate_Auth_User : Evergreen.V20.Auth.User -> Evergreen.V21.Auth.User
migrate_Auth_User old =
    old |> migrate_Bridge_User


migrate_Bridge_User : Evergreen.V20.Bridge.User -> Evergreen.V21.Bridge.User
migrate_Bridge_User old =
    case old of
        Evergreen.V20.Bridge.Unknown ->
            Evergreen.V21.Bridge.Unknown

        Evergreen.V20.Bridge.UserOnDevice p0 ->
            Evergreen.V21.Bridge.UserOnDevice (p0 |> migrate_Bridge_UserOnDeviceData)


migrate_Bridge_UserOnDeviceData : Evergreen.V20.Bridge.UserOnDeviceData -> Evergreen.V21.Bridge.UserOnDeviceData
migrate_Bridge_UserOnDeviceData old =
    old |> migrate_UserManagement_UserOnDeviceData


migrate_Components_Toast_Model : Evergreen.V20.Components.Toast.Model -> Evergreen.V21.Components.Toast.Model
migrate_Components_Toast_Model old =
    { toasts = old.toasts |> Dict.map (\k -> migrate_Components_Toast_Toast)
    , nextId = old.nextId
    }


migrate_Components_Toast_Position : Evergreen.V20.Components.Toast.Position -> Evergreen.V21.Components.Toast.Position
migrate_Components_Toast_Position old =
    case old of
        Evergreen.V20.Components.Toast.TopRight ->
            Evergreen.V21.Components.Toast.TopRight

        Evergreen.V20.Components.Toast.TopLeft ->
            Evergreen.V21.Components.Toast.TopLeft

        Evergreen.V20.Components.Toast.BottomRight ->
            Evergreen.V21.Components.Toast.BottomRight

        Evergreen.V20.Components.Toast.BottomLeft ->
            Evergreen.V21.Components.Toast.BottomLeft


migrate_Components_Toast_Toast : Evergreen.V20.Components.Toast.Toast -> Evergreen.V21.Components.Toast.Toast
migrate_Components_Toast_Toast old =
    { id = old.id
    , message = old.message
    , toastType = old.toastType |> migrate_Components_Toast_ToastType
    , position = old.position |> migrate_Components_Toast_Position
    , duration = old.duration
    , withRemove = old.withRemove
    }


migrate_Components_Toast_ToastType : Evergreen.V20.Components.Toast.ToastType -> Evergreen.V21.Components.Toast.ToastType
migrate_Components_Toast_ToastType old =
    case old of
        Evergreen.V20.Components.Toast.Success ->
            Evergreen.V21.Components.Toast.Success

        Evergreen.V20.Components.Toast.Error ->
            Evergreen.V21.Components.Toast.Error

        Evergreen.V20.Components.Toast.Info ->
            Evergreen.V21.Components.Toast.Info

        Evergreen.V20.Components.Toast.Warning ->
            Evergreen.V21.Components.Toast.Warning


migrate_Event_EventData : Evergreen.V20.Event.EventData -> Evergreen.V21.Event.EventData
migrate_Event_EventData old =
    case old of
        Evergreen.V20.Event.ListCreated p0 ->
            Evergreen.V21.Event.ListCreated (p0 |> migrate_Event_ListCreatedData)

        Evergreen.V20.Event.ListUpdated p0 ->
            Evergreen.V21.Event.ListUpdated (p0 |> migrate_Event_ListUpdatedData)

        Evergreen.V20.Event.ListSharedWithUser p0 ->
            Evergreen.V21.Event.ListSharedWithUser (p0 |> migrate_Event_ListSharedWithUserData)

        Evergreen.V20.Event.ItemCreated p0 ->
            Evergreen.V21.Event.ItemCreated (p0 |> migrate_Event_ItemCreatedData)

        Evergreen.V20.Event.ItemStateChanged p0 ->
            Evergreen.V21.Event.ItemStateChanged (p0 |> migrate_Event_ItemStateChangedData)

        Evergreen.V20.Event.ItemUpdated p0 ->
            Evergreen.V21.Event.ItemUpdated (p0 |> migrate_Event_ItemUpdatedData)


migrate_Event_EventDefinition : Evergreen.V20.Event.EventDefinition -> Evergreen.V21.Event.EventDefinition
migrate_Event_EventDefinition old =
    case old of
        Evergreen.V20.Event.Event p0 p1 ->
            Evergreen.V21.Event.Event (p0 |> migrate_Event_EventMetadata)
                (p1 |> migrate_Event_EventData)


migrate_Event_EventMetadata : Evergreen.V20.Event.EventMetadata -> Evergreen.V21.Event.EventMetadata
migrate_Event_EventMetadata old =
    old


migrate_Event_ItemCreatedData : Evergreen.V20.Event.ItemCreatedData -> Evergreen.V21.Event.ItemCreatedData
migrate_Event_ItemCreatedData old =
    { itemId = old.itemId
    , itemName = old.itemName
    , itemDescription = old.itemDescription
    , itemPriority = old.itemPriority |> Maybe.map migrate_ItemPriority_ItemPriority
    }


migrate_Event_ItemStateChangedData : Evergreen.V20.Event.ItemStateChangedData -> Evergreen.V21.Event.ItemStateChangedData
migrate_Event_ItemStateChangedData old =
    old


migrate_Event_ItemUpdatedData : Evergreen.V20.Event.ItemUpdatedData -> Evergreen.V21.Event.ItemUpdatedData
migrate_Event_ItemUpdatedData old =
    { itemId = old.itemId
    , listId = old.listId
    , name = old.name
    , completed = old.completed
    , itemPriority = old.itemPriority |> Maybe.map migrate_ItemPriority_ItemPriority
    , description = old.description
    }


migrate_Event_ListCreatedData : Evergreen.V20.Event.ListCreatedData -> Evergreen.V21.Event.ListCreatedData
migrate_Event_ListCreatedData old =
    old


migrate_Event_ListSharedWithUserData : Evergreen.V20.Event.ListSharedWithUserData -> Evergreen.V21.Event.ListSharedWithUserData
migrate_Event_ListSharedWithUserData old =
    old


migrate_Event_ListUpdatedData : Evergreen.V20.Event.ListUpdatedData -> Evergreen.V21.Event.ListUpdatedData
migrate_Event_ListUpdatedData old =
    old


migrate_Event_PinkItem : Evergreen.V20.Event.PinkItem -> Evergreen.V21.Event.PinkItem
migrate_Event_PinkItem old =
    { name = old.name
    , itemId = old.itemId
    , description = old.description
    , createdAt = old.createdAt
    , completedAt = old.completedAt
    , lastUpdatedAt = old.lastUpdatedAt
    , numberOfUpdates = old.numberOfUpdates
    , priority = old.priority |> migrate_ItemPriority_ItemPriority
    }


migrate_Event_PinkList : Evergreen.V20.Event.PinkList -> Evergreen.V21.Event.PinkList
migrate_Event_PinkList old =
    { name = old.name
    , listId = old.listId
    , items = old.items |> Dict.map (\k -> migrate_Event_PinkItem)
    , createdAt = old.createdAt
    , lastUpdatedAt = old.lastUpdatedAt
    , numberOfUpdates = old.numberOfUpdates
    , users = old.users
    }


migrate_Event_State : Evergreen.V20.Event.State -> Evergreen.V21.Event.State
migrate_Event_State old =
    { lists = old.lists |> Dict.map (\k -> migrate_Event_PinkList)
    }


migrate_ItemPriority_ItemPriority : Evergreen.V20.ItemPriority.ItemPriority -> Evergreen.V21.ItemPriority.ItemPriority
migrate_ItemPriority_ItemPriority old =
    case old of
        Evergreen.V20.ItemPriority.LowItemPriority ->
            Evergreen.V21.ItemPriority.LowItemPriority

        Evergreen.V20.ItemPriority.MediumItemPriority ->
            Evergreen.V21.ItemPriority.MediumItemPriority

        Evergreen.V20.ItemPriority.HighItemPriority ->
            Evergreen.V21.ItemPriority.HighItemPriority

        Evergreen.V20.ItemPriority.HighestItemPriority ->
            Evergreen.V21.ItemPriority.HighestItemPriority


migrate_Layouts_Scaffold_Model : Evergreen.V20.Layouts.Scaffold.Model -> Evergreen.V21.Layouts.Scaffold.Model
migrate_Layouts_Scaffold_Model old =
    { user = old.user |> migrate_Auth_User
    }


migrate_Main_Layouts_Model_Model : Evergreen.V20.Main.Layouts.Model.Model -> Evergreen.V21.Main.Layouts.Model.Model
migrate_Main_Layouts_Model_Model old =
    case old of
        Evergreen.V20.Main.Layouts.Model.Scaffold p0 ->
            Evergreen.V21.Main.Layouts.Model.Scaffold
                { scaffold = p0.scaffold |> migrate_Layouts_Scaffold_Model
                }


migrate_Main_Model : Evergreen.V20.Main.Model -> Evergreen.V21.Main.Model
migrate_Main_Model old =
    { key = old.key
    , url = old.url
    , page = old.page |> migrate_Main_Pages_Model_Model
    , layout = old.layout |> Maybe.map migrate_Main_Layouts_Model_Model
    , shared = old.shared |> migrate_Shared_Model
    }


migrate_Main_Pages_Model_Model : Evergreen.V20.Main.Pages.Model.Model -> Evergreen.V21.Main.Pages.Model.Model
migrate_Main_Pages_Model_Model old =
    case old of
        Evergreen.V20.Main.Pages.Model.Home_ p0 ->
            Evergreen.V21.Main.Pages.Model.Home_ (p0 |> migrate_Pages_Home__Model)

        Evergreen.V20.Main.Pages.Model.Account p0 ->
            Evergreen.V21.Main.Pages.Model.Account (p0 |> migrate_Pages_Account_Model)

        Evergreen.V20.Main.Pages.Model.Admin_Manual p0 ->
            Evergreen.V21.Main.Pages.Model.Admin_Manual (p0 |> migrate_Pages_Admin_Manual_Model)

        Evergreen.V20.Main.Pages.Model.Admin_Menu p0 ->
            Evergreen.V21.Main.Pages.Model.Admin_Menu (p0 |> migrate_Pages_Admin_Menu_Model)

        Evergreen.V20.Main.Pages.Model.Admin_Users p0 ->
            Evergreen.V21.Main.Pages.Model.Admin_Users (p0 |> migrate_Pages_Admin_Users_Model)

        Evergreen.V20.Main.Pages.Model.Credits p0 ->
            Evergreen.V21.Main.Pages.Model.Credits (p0 |> migrate_Pages_Credits_Model)

        Evergreen.V20.Main.Pages.Model.List_ImportShared p0 ->
            Evergreen.V21.Main.Pages.Model.List_ImportShared (p0 |> migrate_Pages_List_ImportShared_Model)

        Evergreen.V20.Main.Pages.Model.Lists p0 ->
            Evergreen.V21.Main.Pages.Model.Lists (p0 |> migrate_Pages_Lists_Model)

        Evergreen.V20.Main.Pages.Model.Lists_Create p0 ->
            Evergreen.V21.Main.Pages.Model.Lists_Create (p0 |> migrate_Pages_Lists_Create_Model)

        Evergreen.V20.Main.Pages.Model.Lists_Edit_ListId_ p0 p1 ->
            Evergreen.V21.Main.Pages.Model.Lists_Edit_ListId_ p0 (p1 |> migrate_Pages_Lists_Edit_ListId__Model)

        Evergreen.V20.Main.Pages.Model.Lists_Id__CreateItem p0 p1 ->
            Evergreen.V21.Main.Pages.Model.Lists_Id__CreateItem p0
                (p1 |> migrate_Pages_Lists_Id__CreateItem_Model)

        Evergreen.V20.Main.Pages.Model.Lists_ListId_ p0 p1 ->
            Evergreen.V21.Main.Pages.Model.Lists_ListId_ p0 (p1 |> migrate_Pages_Lists_ListId__Model)

        Evergreen.V20.Main.Pages.Model.Lists_ListId__Edit_ItemId_ p0 p1 ->
            Evergreen.V21.Main.Pages.Model.Lists_ListId__Edit_ItemId_ p0
                (p1 |> migrate_Pages_Lists_ListId__Edit_ItemId__Model)

        Evergreen.V20.Main.Pages.Model.Settings p0 ->
            Evergreen.V21.Main.Pages.Model.Settings (p0 |> migrate_Pages_Settings_Model)

        Evergreen.V20.Main.Pages.Model.Setup p0 ->
            Evergreen.V21.Main.Pages.Model.Setup (p0 |> migrate_Pages_Setup_Model)

        Evergreen.V20.Main.Pages.Model.Setup_Connect p0 ->
            Evergreen.V21.Main.Pages.Model.Setup_Connect (p0 |> migrate_Pages_Setup_Connect_Model)

        Evergreen.V20.Main.Pages.Model.Setup_NewAccount p0 ->
            Evergreen.V21.Main.Pages.Model.Setup_NewAccount (p0 |> migrate_Pages_Setup_NewAccount_Model)

        Evergreen.V20.Main.Pages.Model.SetupKnown p0 ->
            Evergreen.V21.Main.Pages.Model.SetupKnown (p0 |> migrate_Pages_SetupKnown_Model)

        Evergreen.V20.Main.Pages.Model.Share_ListId_ p0 p1 ->
            Evergreen.V21.Main.Pages.Model.Share_ListId_ p0 (p1 |> migrate_Pages_Share_ListId__Model)

        Evergreen.V20.Main.Pages.Model.NotFound_ p0 ->
            Evergreen.V21.Main.Pages.Model.NotFound_ (p0 |> migrate_Pages_NotFound__Model)

        Evergreen.V20.Main.Pages.Model.Redirecting_ ->
            Evergreen.V21.Main.Pages.Model.Redirecting_

        Evergreen.V20.Main.Pages.Model.Loading_ ->
            Evergreen.V21.Main.Pages.Model.Loading_


migrate_Pages_Account_Model : Evergreen.V20.Pages.Account.Model -> Evergreen.V21.Pages.Account.Model
migrate_Pages_Account_Model old =
    old


migrate_Pages_Admin_Manual_Model : Evergreen.V20.Pages.Admin.Manual.Model -> Evergreen.V21.Pages.Admin.Manual.Model
migrate_Pages_Admin_Manual_Model old =
    old


migrate_Pages_Admin_Menu_Model : Evergreen.V20.Pages.Admin.Menu.Model -> Evergreen.V21.Pages.Admin.Menu.Model
migrate_Pages_Admin_Menu_Model old =
    old


migrate_Pages_Admin_Users_Model : Evergreen.V20.Pages.Admin.Users.Model -> Evergreen.V21.Pages.Admin.Users.Model
migrate_Pages_Admin_Users_Model old =
    old


migrate_Pages_Credits_Model : Evergreen.V20.Pages.Credits.Model -> Evergreen.V21.Pages.Credits.Model
migrate_Pages_Credits_Model old =
    old


migrate_Pages_Home__Model : Evergreen.V20.Pages.Home_.Model -> Evergreen.V21.Pages.Home_.Model
migrate_Pages_Home__Model old =
    old


migrate_Pages_List_ImportShared_Model : Evergreen.V20.Pages.List.ImportShared.Model -> Evergreen.V21.Pages.List.ImportShared.Model
migrate_Pages_List_ImportShared_Model old =
    old


migrate_Pages_Lists_Create_Model : Evergreen.V20.Pages.Lists.Create.Model -> Evergreen.V21.Pages.Lists.Create.Model
migrate_Pages_Lists_Create_Model old =
    old


migrate_Pages_Lists_Edit_ListId__Model : Evergreen.V20.Pages.Lists.Edit.ListId_.Model -> Evergreen.V21.Pages.Lists.Edit.ListId_.Model
migrate_Pages_Lists_Edit_ListId__Model old =
    old


migrate_Pages_Lists_Id__CreateItem_Model : Evergreen.V20.Pages.Lists.Id_.CreateItem.Model -> Evergreen.V21.Pages.Lists.Id_.CreateItem.Model
migrate_Pages_Lists_Id__CreateItem_Model old =
    { listId = old.listId
    , itemName = old.itemName
    , itemDescription = old.itemDescription
    , itemPriority = old.itemPriority |> migrate_ItemPriority_ItemPriority
    , error = old.error
    }


migrate_Pages_Lists_ListId__Edit_ItemId__Model : Evergreen.V20.Pages.Lists.ListId_.Edit.ItemId_.Model -> Evergreen.V21.Pages.Lists.ListId_.Edit.ItemId_.Model
migrate_Pages_Lists_ListId__Edit_ItemId__Model old =
    { itemName = old.itemName
    , initialItemName = old.initialItemName
    , itemChecked = old.itemChecked
    , initialItemChecked = old.initialItemChecked
    , itemPriority = old.itemPriority |> migrate_ItemPriority_ItemPriority
    , initialItemPriority = old.initialItemPriority |> migrate_ItemPriority_ItemPriority
    , itemDescription = old.itemDescription
    , initialItemDescription = old.initialItemDescription
    , listId = old.listId
    , itemId = old.itemId
    , createdAt = old.createdAt
    , lastUpdatedAt = old.lastUpdatedAt
    , numberOfUpdates = old.numberOfUpdates
    }


migrate_Pages_Lists_ListId__Model : Evergreen.V20.Pages.Lists.ListId_.Model -> Evergreen.V21.Pages.Lists.ListId_.Model
migrate_Pages_Lists_ListId__Model old =
    old


migrate_Pages_Lists_Model : Evergreen.V20.Pages.Lists.Model -> Evergreen.V21.Pages.Lists.Model
migrate_Pages_Lists_Model old =
    old


migrate_Pages_NotFound__Model : Evergreen.V20.Pages.NotFound_.Model -> Evergreen.V21.Pages.NotFound_.Model
migrate_Pages_NotFound__Model old =
    old


migrate_Pages_Settings_Model : Evergreen.V20.Pages.Settings.Model -> Evergreen.V21.Pages.Settings.Model
migrate_Pages_Settings_Model old =
    old


migrate_Pages_SetupKnown_Model : Evergreen.V20.Pages.SetupKnown.Model -> Evergreen.V21.Pages.SetupKnown.Model
migrate_Pages_SetupKnown_Model old =
    old


migrate_Pages_Setup_Connect_Model : Evergreen.V20.Pages.Setup.Connect.Model -> Evergreen.V21.Pages.Setup.Connect.Model
migrate_Pages_Setup_Connect_Model old =
    old


migrate_Pages_Setup_Model : Evergreen.V20.Pages.Setup.Model -> Evergreen.V21.Pages.Setup.Model
migrate_Pages_Setup_Model old =
    { redirect = old.redirect
    , initialUserdata = old.initialUserdata |> Maybe.map migrate_Bridge_User
    }


migrate_Pages_Setup_NewAccount_Model : Evergreen.V20.Pages.Setup.NewAccount.Model -> Evergreen.V21.Pages.Setup.NewAccount.Model
migrate_Pages_Setup_NewAccount_Model old =
    old


migrate_Pages_Share_ListId__Model : Evergreen.V20.Pages.Share.ListId_.Model -> Evergreen.V21.Pages.Share.ListId_.Model
migrate_Pages_Share_ListId__Model old =
    { listId = old.listId
    , state = old.state |> migrate_Pages_Share_ListId__States
    }


migrate_Pages_Share_ListId__States : Evergreen.V20.Pages.Share.ListId_.States -> Evergreen.V21.Pages.Share.ListId_.States
migrate_Pages_Share_ListId__States old =
    case old of
        Evergreen.V20.Pages.Share.ListId_.InitializingSync ->
            Evergreen.V21.Pages.Share.ListId_.InitializingSync

        Evergreen.V20.Pages.Share.ListId_.Syncing ->
            Evergreen.V21.Pages.Share.ListId_.Syncing

        Evergreen.V20.Pages.Share.ListId_.DoneSyncing ->
            Evergreen.V21.Pages.Share.ListId_.DoneSyncing

        Evergreen.V20.Pages.Share.ListId_.ErrorSyncing p0 ->
            Evergreen.V21.Pages.Share.ListId_.ErrorSyncing p0


migrate_Role_Role : Evergreen.V20.Role.Role -> Evergreen.V21.Role.Role
migrate_Role_Role old =
    case old of
        Evergreen.V20.Role.User ->
            Evergreen.V21.Role.User

        Evergreen.V20.Role.Admin ->
            Evergreen.V21.Role.Admin


migrate_Shared_Model : Evergreen.V20.Shared.Model -> Evergreen.V21.Shared.Model
migrate_Shared_Model old =
    old |> migrate_Shared_Model_Model


migrate_Shared_Model_Model : Evergreen.V20.Shared.Model.Model -> Evergreen.V21.Shared.Model.Model
migrate_Shared_Model_Model old =
    { user = old.user |> Maybe.map migrate_Bridge_User
    , syncCode = old.syncCode
    , nextIds = old.nextIds
    , syncModel = old.syncModel |> migrate_Sync_FrontendSyncModel
    , state = old.state |> migrate_Event_State
    , menuOpen = old.menuOpen
    , version = old.version
    , toasts = old.toasts |> migrate_Components_Toast_Model
    , networkStatus = Evergreen.V21.NetworkStatus.NetworkUnknown
    }


migrate_SortedEventList_Model : Evergreen.V20.SortedEventList.Model -> Evergreen.V21.SortedEventList.Model
migrate_SortedEventList_Model old =
    old |> Array.map migrate_Event_EventDefinition


migrate_Sync_FrontendSyncModel : Evergreen.V20.Sync.FrontendSyncModel -> Evergreen.V21.Sync.FrontendSyncModel
migrate_Sync_FrontendSyncModel old =
    { events = old.events |> migrate_SortedEventList_Model
    , lastSyncServerTime = old.lastSyncServerTime
    , unsyncedEventIds = old.unsyncedEventIds
    }


migrate_UserManagement_UserOnDeviceData : Evergreen.V20.UserManagement.UserOnDeviceData -> Evergreen.V21.UserManagement.UserOnDeviceData
migrate_UserManagement_UserOnDeviceData old =
    { userId = old.userId
    , deviceId = old.deviceId
    , deviceName = old.deviceName
    , userName = old.userName
    , roles = old.roles |> List.map migrate_Role_Role
    }
